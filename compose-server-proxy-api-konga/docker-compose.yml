version: '3'

# gestion de APIs

services:
  #=============================================================================
  #1. Inicie un contenedor de PostgreSQL ejecutado
  #=============================================================================
  kong-database:
    image: postgres:9.6
    environment:
      - POSTGRES_DB=kong
      - POSTGRES_USER=kong
      - POSTGRES_PASSWORD=kong
    ports:
      - 5432:5432
    networks:
      - kong-network
    volumes:
      - db-data-kong-postgres:/var/lib/postgresql/data

  #=============================================================================
  #2. Ejecute las migraciones de base de datos con un contenedor efímero de Kong
  #=============================================================================
  kong-migration:
    image: kong
    depends_on:
      - kong-database
    links:
      - kong-database:kong-database
    restart: on-failure
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_USER=kong
      - KONG_PG_PASSWORD=kong
      - KONG_PG_DATABASE=kong
      - KONG_CASSANDRA_CONTACT_POINTS=kong-database
    command: kong migrations bootstrap
    networks:
      - kong-network

  #=============================================================================
  #3. Una vez que la base de datos se ha iniciado y preparado, 
  #podemos iniciar un contenedor Kong y vincularlo al contenedor de la base de datos,
  #y configurar la variable de entorno KONG_DATABASE con cassandra o postgres, 
  #según la base de datos que haya decidido utilizar.
  #=============================================================================
  #start kong
  kong:
    image: kong
    links:
      - kong-database:kong-database
    restart: on-failure
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_USER=kong
      - KONG_PG_PASSWORD=kong
      - KONG_CASSANDRA_CONTACT_POINTS=kong-database
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl
    ports:
      - 8000:8000 #proxy
      - 8443:8443 #proxy ssl
      - 8001:8001 #admin api
      - 8444:8444 #admin api ssl
    networks:
      - kong-network

  #=============================================================================
  # 4.Las siguientes instrucciones asumen que tiene una instancia de Kong en
  # ejecución siguiendo las instrucciones del docker-hub de Kong
  #=============================================================================
  konga:
    image: pantsel/konga
    ports:
      - 1337:1337
    environment:
      - TOKEN_SECRET=somerandomstring
      - DB_ADAPTER=postgres
      - DB_HOST=kong-database
      - DB_PORT=5432
      - DB_USER=kong
      - DB_PASSWORD=kong
      - DB_DATABASE=kong
      # - DB_PG_SCHEMA=
      - NODE_ENV=development
    networks:
      - kong-network

volumes:
  db-data-kong-postgres:
networks:
  kong-network:
    external: false